Compalgo is a lightweight framework helping you to split complex business logic and rules into individual atomic
functions and assemble them together to any complexity level. It has been refactored to utilize the Function
and Predicate from Google collections. They used to be called Solution and Applicability.

Please check LoanStory.java and LoanCalculation.java for example and compare TraditionalLoanCalculation.java for alternative
solution without using the framework.

The LoanStory.java demonstrates how to use Compalgo to solve the following complex business problems.

    In Narnia, if the buyers borrow the application fee, the application fee will be added to the financialInstrument principal, otherwise it
    will be added to the first month payment; first time buyers don't pay stamp duty, other buyers pay stamp duty on
    the monthly payment at the rate is 3%.

    In Wonderland, the buyers pay stamp duty on the financialInstrument principal at the rate of 3% and it will
    be collected on the first month payment, together with the application fee.

    In Gondor, the buyers pay stamp duty on the monthly payment at the rate of 2%. The
    application fee will be added to the first month payment.

Note,

    When learning this framework, please pay more attention to how to wire atomic functions into a
    complex function than how individual functions work. The example of wiring can be found in GondorCalculation,
    NarniaCalculation and WonderlandCalculation.

